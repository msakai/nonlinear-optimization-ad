language: c
sudo: false

cache:
  directories:
  - $HOME/.cabal

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.tar

matrix:
  include:
    - env: CABALVER=3.0 GHCVER=7.8.4
      compiler: ": #GHC 7.8.4"
      addons: {apt: {packages: [cabal-install-3.0,ghc-7.8.4], sources: [hvr-ghc]}}
    - env: CABALVER=3.0 GHCVER=7.10.3
      compiler: ": #GHC 7.10.3"
      addons: {apt: {packages: [cabal-install-3.0,ghc-7.10.3], sources: [hvr-ghc]}}
    - env: CABALVER=3.0 GHCVER=8.0.2
      compiler: ": #GHC 8.0.2"
      addons: {apt: {packages: [cabal-install-3.0,ghc-8.0.2], sources: [hvr-ghc]}}
    - env: CABALVER=3.0 GHCVER=8.2.2
      compiler: ": #GHC 8.2.2"
      addons: {apt: {packages: [cabal-install-3.0,ghc-8.2.2], sources: [hvr-ghc]}}
    - env: CABALVER=3.0 GHCVER=8.4.4
      compiler: ": #GHC 8.4.4"
      addons: {apt: {packages: [cabal-install-3.0,ghc-8.4.4], sources: [hvr-ghc]}}
    - env: CABALVER=3.0 GHCVER=8.6.4
      compiler: ": #GHC 8.6.4"
      addons: {apt: {packages: [cabal-install-3.0,ghc-8.6.4], sources: [hvr-ghc]}}
    - env: CABALVER=3.0 GHCVER=8.8.2
      compiler: ": #GHC 8.8.2"
      addons: {apt: {packages: [cabal-install-3.0,ghc-8.8.2], sources: [hvr-ghc]}}

before_install:
 - unset CC
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:~/.cabal/bin:$PATH

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal v2-update -v
 - sed -i 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config

# Here starts the actual work to be performed for the package under test;
# any command which exits with a non-zero exit code causes the build to fail.
script:
 - cabal v2-configure --enable-tests --enable-benchmarks --flags="BuildSamplePrograms" -v2 $([ "$COVERAGE" = "1" ] && echo "--enable-library-coverage") # -v2 provides useful information for debugging
 - cabal v2-build all  # this builds all libraries and executables (including tests/benchmarks)
#  - cabal v2-test all
 - cabal v2-sdist all  # tests that a source-distribution can be generated

