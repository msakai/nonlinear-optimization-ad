on: [push, pull_request]
name: build
jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        ghc: ['8.6.5', '8.8.4', '8.10.7', '9.0.2', '9.2.7', '9.4.5']
        os: [ubuntu-latest]
        include:
          - ghc: '8.6.5'
            stack_yaml: 'stack-ghc-8.6.yaml'
            flags: ''
          - ghc: '8.8.4'
            stack_yaml: 'stack-ghc-8.8.yaml'
            flags: ''
          - ghc: '8.10.7'
            stack_yaml: 'stack-ghc-8.10.yaml'
            coveralls: true
            flags: '--coverage'
          - ghc: '9.0.2'
            stack_yaml: 'stack-ghc-9.0.yaml'
            flags: ''
          - ghc: '9.2.7'
            stack_yaml: 'stack-ghc-9.2.yaml'
            flags: ''
          - ghc: '9.4.5'
            stack_yaml: 'stack-ghc-9.4.yaml'
            flags: ''
    steps:
      - uses: actions/checkout@v2

      - uses: haskell/actions/setup@v2
        name: Setup Haskell
        with:
          ghc-version: ${{ matrix.ghc }}
          enable-stack: true
          stack-version: 'latest'

      - uses: actions/cache@v1
        name: Cache ~/.stack
        with:
          path: ~/.stack
          key: ${{ runner.os }}-${{ matrix.ghc }}-stack

      - name: Install packages (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get install liblbfgsb-dev

      # - name: Install packages (macOS)
      #   if: runner.os == 'macOS'
      #   run: brew install msakai/tap/liblbfgsb

      - name: Build
        run: |
          stack --stack-yaml ${{ matrix.stack_yaml }} build --test --no-run-tests --bench --no-run-benchmarks --flag nonlinear-optimization-ad:BuildSamplePrograms --flag nonlinear-optimization-backprop:BuildSamplePrograms ${{ matrix.flags }}

      - name: Create source tarball
        run: stack --stack-yaml ${{ matrix.stack_yaml }} sdist
